<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lu.assess.mapper.EmployeeMapper">
    <resultMap id="EmployeeMap" type="com.lu.assess.pojo.Employee">
        <!--在定义映射规则时主键不能省略-->
        <id column="eid" property="eid"></id>
        <result column="job_num" property="jobNum"></result>
        <result column="com_eva" property="comEva"></result>
        <result column="username" property="username"></result>
    </resultMap>

    <resultMap id="ec" type="com.lu.assess.pojo.Employee">
        <id column="eid" property="eid"></id>
        <result column="job_num" property="jobNum"></result>
        <result column="username" property="username"></result>
        <result column="roles" property="roles"></result>
        <result column="sex" property="sex"></result>
        <result column="com_eva" property="comEva"></result>
        <result column="gid" property="gid"></result>
        <result column="did" property="did"></result>
        <result column="cid" property="cid"></result>
        <result column="participate" property="participate"></result>
        <result column="count" property="count"></result>

        <association property="college" javaType="com.lu.assess.pojo.College">
            <id column="cid" property="cid"></id>
            <result column="college_name" property="collegeName"></result>
        </association>
        <association property="depart" javaType="com.lu.assess.pojo.Depart">
            <id column="did" property="did"></id>
            <result column="depart_name" property="departName"></result>
        </association>
    </resultMap>

    <resultMap id="ed" type="com.lu.assess.pojo.Employee">
        <id column="eid" property="eid"></id>
        <result column="username" property="username"></result>
        <association property="depart" javaType="com.lu.assess.pojo.Depart">
            <id column="did" property="did"></id>
            <result column="depart_name" property="departName"></result>
        </association>
    </resultMap>


    <insert id="insertEmployee" useGeneratedKeys="true" keyProperty="eid">
        insert into employee (job_num,username,password,roles,cid,sex,did,
                              gid,com_eva,participate,count)
        values (#{jobNum}, #{username},
                #{password}, #{roles}, #{cid},
                #{sex}, #{did},
                #{gid},
                #{comEva},#{participate},#{count})

    </insert>


    <select id="findEmployeeByJobNum" resultMap="EmployeeMap">
        select * from assess_sys.employee where Job_num=#{jobNum}
    </select>

    <delete id="deleteEmployeeByEid">
        delete from assess_sys.employee where eid = #{eid}
    </delete>

    <select id="findByEid" resultMap="ec">
        select employee.eid,employee.job_num,employee.username,employee.sex,employee.roles,employee.gid,employee.com_eva,employee.participate,employee.count,employee.cid,college.college_name,college.cid,depart.depart_name,depart.did
            from employee,college,depart where employee.cid=college.cid and employee.did = depart.did and eid = #{eid}
    </select>





    <select id="showEmployeeInfo" resultMap="ec">
        select employee.eid,employee.job_num,employee.username,employee.sex
             ,college.college_name,college.cid,depart.depart_name,depart.did
               from employee,college,depart
        where employee.cid=college.cid
          and employee.did = depart.did
    </select>






    <update id="updateEmployeeInfo">
        update assess_sys.employee
        set
            <if test="jobNum!=null">job_num=#{jobNum},</if>
            <if test="username!=null">username=#{username},</if>
            <if test="sex!=null">sex=#{sex},</if>
            <if test="cid!=null">cid=#{cid},</if>
            <if test="did!=null">did=#{did},</if>
            <if test="roles!=null">roles=#{roles}</if>
        where eid = #{eid}
    </update>

    <update id="updateComEva">
        update assess_sys.employee
        set com_eva = #{comEva} where eid = #{eid}
    </update>

    <select id="showEmployeeByGid" resultMap="EmployeeMap">
        select job_num,username from employee where gid = #{gid} and participate=0
    </select>

    <select id="showEmployeeByCid" resultMap="EmployeeMap">
        select job_num,username from employee where cid = #{cid} and participate=0
    </select>

    <update id="updatePassword">
        update assess_sys.employee
        set password = #{password} where eid = #{eid}
    </update>

    <update id="updateParticipateAndComEvaAndGid">
        update assess_sys.employee
        set participate = 0,
            com_eva = 1,
            gid = 0
    </update>

    <select id="selectEmpCountByGid" resultType="Integer">
        select count(*)
        from employee
        where gid = #{gid}
    </select>

    <select id="selectEmployeeByCid" resultMap="EmployeeMap">
        select *
        from assess_sys.employee
        where cid = #{cid} and roles != 'superAdmin' and roles != 'colAdmin'
    </select>

    <update id="uploadNotParticipateEids">
        update assess_sys.employee
        set assess_sys.employee.participate = 1
        where eid in
        (
        <foreach collection="eids" item="eid" separator=",">
            #{eid}
        </foreach>
        )
    </update>

    <update id="uploadParticipateEids">
        update assess_sys.employee
        set assess_sys.employee.participate = 0
        where eid in
        (
        <foreach collection="eids" item="eid" separator=",">
            #{eid}
        </foreach>
        )
    </update>

    <select id="selectParticipateEmpolyeeByCid" resultMap="EmployeeMap">
        select *
        from assess_sys.employee
        where cid = #{cid} and participate = 0 and roles = 'user'
    </select>

    <select id="selectParticipateEmployeeByCidAndRolesMed" resultMap="EmployeeMap">
        select job_num,username
        from assess_sys.employee
        where cid = #{cid} and participate = 0 and roles = 'user'
    </select>

    <select id="selectParticipateEmployeeByCidAndRolesSub" resultMap="EmployeeMap">
        select job_num,username
        from assess_sys.employee
        where cid = #{cid} and participate = 0 and roles = 'sub'
    </select>

    <select id="showUsernameAndDepartNameByCid" resultMap="ec">
        select employee.eid,employee.username,depart.depart_name
        from employee,depart
        where employee.did = depart.did and employee.cid =#{cid} and participate = 0 and gid = 0 and (roles = 'sub' or roles = 'user')
    </select>

    <update id="uploadEidsByGid">
        update assess_sys.employee
        set assess_sys.employee.gid = #{gid}
        where eid in
        (
        <foreach collection="eids" item="eid" separator=",">
            #{eid}
        </foreach>
        )
    </update>

    <select id="showWhetherCount" resultType="Integer">
        select employee.count from employee where eid = #{eid}
    </select>

    <update id="updateCount">
        update assess_sys.employee
        set employee.count = 0
        where eid = #{eid}
    </update>
    <update id="updateCountOne">
        update assess_sys.employee
        set employee.count = 1
        where roles = 'colAdmin'
    </update>

    <select id="countNum" resultType="Integer">
        select count(*) from employee where participate=0 and roles !='superAdmin' and cid = #{cid}
    </select>

    <select id="showComEvaZero" resultMap="EmployeeMap">
        select employee.job_num,employee.username from employee where cid = #{cid} and com_eva = 0  and participate=0 and roles != 'superAdmin'
    </select>
    <select id="showComEvaOne" resultMap="EmployeeMap">
        select employee.job_num,employee.username from employee where cid = #{cid} and com_eva !=0 and participate=0 and roles != 'superAdmin'
    </select>
    <select id="getAll" resultType="com.lu.assess.pojo.Employee">
        select * from assess_sys.employee;
    </select>

    <select id="selectGidByEid" resultType="java.lang.Integer">
        select gid from employee where eid = #{eid}
    </select>

    <update id="cleanGidByCid">
        update assess_sys.employee
        set gid = 0
        where assess_sys.employee.cid = #{cid}
    </update>

    <update id="updateDepart">
        update employee set did = 0 where did = #{did}
    </update>

    <update id="update">
        update assess_sys.employee set assess_sys.employee.password = #{encrypt}
        where assess_sys.employee.eid = #{eid}
    </update>

    <!--    <select id="showEmployeeByGid" resultMap="EmployeeMap">-->
<!--        select employee.username,employee.sex from employee where gid = #{gid}-->
<!--    </select>-->

</mapper>
